{
  "vague_description": "How can the amusement park balance the number of throwing and climbing games while meeting customer demand and maximizing profit within budget constraints?",
  "detailed_description": "An amusement park has two types of games: throwing and climbing games. Throwing games attract \\param{Ct} customers every hour and climbing games attract \\param{Cc} customers every hour. Throwing games costs the amusement park \\param{Pt} in prizes per hour whereas climbing games cost \\param{Pc} in prizes per hour. Since throwing games yield the most profit, there must be at least \\param{R} times as many throwing games as climbing games. However, at least \\param{MinClimbingGames} games must be climbing. If the amusement park can have at most \\param{MaxPrizeCost} in prizes every hour, maximize the total number of customers attracted every hour.",
  "target_objective": "Maximize the total number of customers attracted every hour",
  "target_constraints": [
    "Number of throwing games is at least R times the number of climbing games",
    "At least MinClimbingGames are climbing games",
    "Total cost in prizes per hour does not exceed MaxPrizeCost",
    "Number of throwing games is non-negative",
    "Number of climbing games is non-negative"
  ],
  "target_parameters": [
    "Number of customers per hour for throwing games",
    "Number of customers per hour for climbing games",
    "Cost of prizes per hour for throwing games",
    "Cost of prizes per hour for climbing games",
    "Minimum ratio of the number of throwing games to climbing games",
    "Minimum number of climbing games",
    "Maximum total cost of prizes per hour"
  ]
}